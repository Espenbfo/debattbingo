{"version":3,"sources":["github.svg","components/BingoCell/backgroundt.png","bingo.txt","components/BingoCell/index.js","components/Radio/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","BingoCell","handleClick","_this","props","handleCellChange","id","react_default","a","createElement","className","this","clicked","onClick","content","Component","Radio","handleChange","value","text","type","name","checked","onChange","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","chosen_cells","bingo_id","bingo_rows","bingo_cols","bingo_diagonal_down","bingo_diagonal_up","is_bingo","bingo_type","generateBoard","cells","Math","floor","i","colBingo","j","console","log","diagBingoDown","diagBingoUp","rowBingo","newState","setState","localStorage","setItem","JSON","stringify","rawFile","XMLHttpRequest","open","require","onreadystatechange","readyState","status","allText","responseText","picks","generatePicks","pickedText","split","filter","item","key","indexOf","matrix","initState","send","bind","assertThisInitialized","getItem","parse","document","title","valueOf","_this2","role","aria-label","href","src","logo","style","maxHeight","maxWidth","alt","fireImg","components_Radio","compareRadioValue","map","arguments","length","undefined","components_BingoCell","k","random","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.85768912.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github.a0b866ca.svg\";","module.exports = __webpack_public_path__ + \"static/media/backgroundt.2abdc64b.png\";","module.exports = __webpack_public_path__ + \"static/media/bingo.93c4e5b4.txt\";","import React, { Component } from 'react';\nimport './BingoCell.css';\n\nclass BingoCell extends Component {\n\n    handleClick = () => {\n        this.props.handleCellChange(this.props.id);\n    };\n\n    render() {\n        return (\n            <div className={this.props.clicked ? \"cell cell-selected\" : \"cell\"} onClick={this.handleClick}>\n                <p>{this.props.content}</p>\n            </div>\n        );\n    }\n}\n\nexport default BingoCell;","import React, { Component } from 'react';\nimport './Radio.css';\n\nclass Radio extends Component {\n\n    // Hvis knappen endres, send melding om dette til parent.\n    handleChange = () => {\n        this.props.handleChange(this.props.value);\n    };\n\n    render() {\n        return (\n            <label className=\"container\">{this.props.text}\n                <input type=\"radio\" name={this.props.name} value={this.props.value} checked={this.props.checked} onChange={this.handleChange}/>\n                <span className=\"checkmark\"/>\n            </label>\n\n        );\n    }\n}\n\nexport default Radio;\n","import React, { Component } from 'react';\nimport BingoCell from './components/BingoCell';\nimport Radio from './components/Radio';\nimport './App.css';\nimport logo from './github.svg';\nimport fireImg from './components/BingoCell/backgroundt.png';\n\nclass App extends Component {\n\n  constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleCellChange = this.handleCellChange.bind(this);\n  }\n\n  state = {\n      text: [],\n      chosen_cells: [],\n      bingo_id: 0,\n      bingo_rows: [],\n      bingo_cols: [],\n      bingo_diagonal_down: false,\n      bingo_diagonal_up: false,\n      is_bingo: false,\n      bingo_type: \"0\"\n  };\n\n  componentDidMount() {\n      if(!!localStorage.getItem('bingoState')) {\n          this.setState(JSON.parse(localStorage.getItem('bingoState')))\n      } else {\n          this.generateBoard(\"m\");\n      }\n      document.title = \"Tinderbingo\"\n  }\n\n  componentDidUpdate() {\n      localStorage.setItem('bingoState', JSON.stringify(this.state));\n  }\n\n  handleChange = (value) => {\n      this.generateBoard(value);\n  };\n\n  handleCellChange = (value) => {\n      let cells = this.state.chosen_cells;\n      cells[value%4][Math.floor(value/4)] = !cells[value%4][Math.floor(value/4)];\n      let bingo_rows = this.state.bingo_rows;\n      let bingo_cols = this.state.bingo_cols;\n      let bingo_diagonal_down = this.state.bingo_diagonal_down;\n      let bingo_diagonal_up = this.state.bingo_diagonal_up;\n      let is_bingo = false;\n\n      for (let i = 0; i < 4; i++) {\n          if(!this.state.bingo_cols[i]) {\n              let colBingo = true;\n              for (let j = 0; j < 4; j++) {\n                  if (!cells[i][j]) {\n                      colBingo = false;\n                  }\n              }\n              if(colBingo) {\n                  console.log(\"col bingo!\");\n                  bingo_cols[i] = true;\n                  console.log(bingo_cols);\n                  is_bingo = true;\n              }\n          }\n      }\n      if (!bingo_diagonal_down) {\n          let diagBingoDown = true;\n          for (let i = 0; i < 4; i++) {\n              if (!cells[i][i]) {\n                  diagBingoDown = false;\n              }\n          }\n          if(diagBingoDown) {\n              console.log(\"diagonal bingo!\");\n              bingo_diagonal_down = true;\n              is_bingo = true;\n          }\n      }\n      if(!bingo_diagonal_up) {\n          let diagBingoUp = true;\n          for (let i = 0; i < 4; i++) {\n              if (!cells[3-i][i]) {\n                  diagBingoUp = false;\n              }\n          }\n          if(diagBingoUp) {\n              console.log(\"diagonal bingo!\");\n              bingo_diagonal_up = true;\n              is_bingo = true;\n          }\n      }\n      for (let i = 0; i < 4; i++) {\n          if(!this.state.bingo_rows[i]) {\n              let rowBingo = true;\n              for (let j = 0; j < 4; j++) {\n                  if (!cells[j][i]) {\n                      rowBingo = false;\n                  }\n              }\n              if (rowBingo) {\n                  console.log(\"row bingo!\");\n                  bingo_rows[i] = true;\n                  console.log(bingo_rows);\n                  is_bingo = true;\n              }\n          }\n      }\n      const newState = {\n          text: this.state.text,\n          chosen_cells: cells,\n          bingo_rows: bingo_rows,\n          bingo_cols: bingo_cols,\n          bingo_diagonal_down: bingo_diagonal_down,\n          bingo_diagonal_up: bingo_diagonal_up,\n          is_bingo: is_bingo,\n          bingo_id: this.state.bingo_id,\n          bingo_type: this.state.bingo_type\n      };\n      this.setState(newState);\n      localStorage.setItem('bingoState', JSON.stringify(newState));\n  };\n\n  static generatePicks(value = \"m\") {\n      let picks = [];\n      for (let i = 0; i < 16; i++) {\n\n          let k = Math.floor(Math.random() * 96);\n\n          if(value === \"m\") {\n              while (k >= 81) {\n                  k = Math.floor(Math.random() * 96);\n              }\n          }\n\n          else if(value === \"f\") {\n              while (66 < k && k < 81) {\n                  k = Math.floor(Math.random() * 96);\n              }\n          }\n\n          while(picks.indexOf(k) > -1) {\n              k = Math.floor(Math.random() * 66);\n          }\n          picks[i] = k;\n      }\n      return picks;\n  }\n\n  generateBoard = (value) => {\n      let rawFile = new XMLHttpRequest();\n      rawFile.open(\"GET\", require(\"./bingo.txt\"), false);\n      rawFile.onreadystatechange = () => {\n          if (rawFile.readyState === 4) {\n              if (rawFile.status === 200 || rawFile.status === 0) {\n                  let allText = rawFile.responseText;\n                  let picks = App.generatePicks(value);\n                  let pickedText = allText.split(\"\\n\").filter(\n                      (item, key) => { return picks.indexOf(key) > -1 }\n                  );\n                  let matrix = [];\n                  for(let i=0; i<4; i++) {\n                      matrix[i] = [];\n                      for(let j=0; j<4; j++) {\n                          matrix[i][j] = false;\n                      }\n                  }\n                  const initState = {\n                      text: pickedText,\n                      bingo_id: this.state.bingo_id+16,\n                      chosen_cells: matrix,\n                      bingo_rows: [],\n                      bingo_cols: [],\n                      bingo_diagonal_down: false,\n                      bingo_diagonal_up: false,\n                      bingo_type: value\n                  };\n                  localStorage.setItem('bingoState', JSON.stringify(initState));\n                  this.setState(initState);\n              }\n          }\n      };\n      rawFile.send(null);\n  };\n\n  compareRadioValue(value) {\n      return this.state.bingo_type.valueOf() === value.valueOf()\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n          <div className={this.state.is_bingo ? \"popup show\" : \"popup\"} onClick={() => this.setState({is_bingo: false})}>\n              <div className=\"bingotext\">\n                  <span role=\"img\" aria-label=\"flame\">🔥</span>\n                  <span>Bingo!</span>\n                  <span role=\"img\" aria-label=\"flame\">🔥</span>\n                  <p>(Trykk for å lukke)</p>\n              </div>\n          </div>\n\n          <div className=\"github\">\n              <a href={\"https://github.com/Magssch/Tinder-bingo-web\"}>\n                  <img src={logo} style={{maxHeight: 50, maxWidth: \"6vw\"}} alt=\"Github\" />\n                  <br/>\n                  <div>Regler</div>\n              </a>\n          </div>\n          <div className=\"App-header\">\n            <span className=\"logo\">\n              <img src={fireImg} style={{maxHeight: 30, maxWidth: \"6vw\"}} alt=\"🔥\" />\n              <span> Tinderbingo</span>\n            </span>\n            <div className=\"categories\">\n              <Radio text={\"Menn\"} name={\"gender\"} value={\"m\"} checked={this.compareRadioValue(\"m\")} handleChange={this.handleChange}/>\n              <Radio text={\"Kvinner\"} name={\"gender\"} value={\"f\"} checked={this.compareRadioValue(\"f\")} handleChange={this.handleChange}/>\n              <Radio text={\"Begge\"} name={\"gender\"} value={\"b\"} checked={this.compareRadioValue(\"b\")} handleChange={this.handleChange}/>\n            </div>\n          </div>\n          <div className=\"bingoBoard\">\n              {\n                this.state.text.map((item, key = 0) => {\n                    key++;\n                    return <BingoCell key={this.state.bingo_id + key} id={key-1} content={item} clicked={this.state.chosen_cells[(key-1)%4][Math.floor((key-1)/4)]} handleCellChange={this.handleCellChange}/>;\n                })\n              }\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
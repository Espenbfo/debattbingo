{"version":3,"sources":["github.svg","bingo.txt","components/BingoCell/index.js","components/Radio/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","BingoCell","state","clicked","handleClick","isClicked","_this","setState","props","handleCellChange","id","react_default","a","createElement","className","this","onClick","content","Component","Radio","handleChange","value","text","type","name","defaultChecked","checked","onChange","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","chosen_cells","bingo_id","bingo_rows","bingo_cols","bingo_diagonal_down","bingo_diagonal_up","is_bingo","generateBoard","cells","Math","floor","console","log","i","colBingo","j","diagBingoDown","diagBingoUp","rowBingo","arguments","length","undefined","rawFile","XMLHttpRequest","open","require","onreadystatechange","readyState","status","allText","responseText","picks","generatePicks","pickedText","split","filter","item","key","indexOf","matrix","send","bind","assertThisInitialized","document","title","_this2","href","src","logo","style","maxHeight","maxWidth","alt","role","aria-label","components_Radio","map","components_BingoCell","k","random","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,sKCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,6JCwBzBC,oNAnBXC,MAAQ,CACJC,SAAS,KAGbC,YAAc,WACV,IAAIC,GAAaC,EAAKJ,MAAMC,QAC5BG,EAAKC,SAAS,CAACJ,QAASE,IACxBC,EAAKE,MAAMC,iBAAiBH,EAAKE,MAAME,6EAIvC,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAKb,MAAMC,QAAU,qBAAuB,OAAQa,QAASD,KAAKX,aAC9EO,EAAAC,EAAAC,cAAA,SAAIE,KAAKP,MAAMS,iBAfPC,cCkBTC,oNAfXC,aAAe,WACXd,EAAKE,MAAMY,aAAad,EAAKE,MAAMa,gFAInC,OACIV,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aAAaC,KAAKP,MAAMc,KACrCX,EAAAC,EAAAC,cAAA,SAAOU,KAAK,QAAQC,KAAMT,KAAKP,MAAMgB,KAAMH,MAAON,KAAKP,MAAMa,MAAOI,eAAgBV,KAAKP,MAAMkB,QAASC,SAAUZ,KAAKK,eACvHT,EAAAC,EAAAC,cAAA,QAAMC,UAAU,sBAXZI,sCCmOLU,cA9Nb,SAAAA,EAAYpB,GAAO,IAAAF,EAAA,OAAAuB,OAAAC,EAAA,EAAAD,CAAAd,KAAAa,IACbtB,EAAAuB,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAlB,KAAMP,KAKZN,MAAQ,CACJoB,KAAM,GACNY,aAAc,GACdC,SAAU,EACVC,WAAY,GACZC,WAAY,GACZC,qBAAqB,EACrBC,mBAAmB,EACnBC,UAAU,GAdKlC,EAsBnBc,aAAe,SAACC,GACZf,EAAKmC,cAAcpB,IAvBJf,EA0BnBG,iBAAmB,SAACY,GAChB,IAAIqB,EAAQpC,EAAKJ,MAAMgC,aACvBQ,EAAMrB,EAAM,GAAGsB,KAAKC,MAAMvB,EAAM,KAAOqB,EAAMrB,EAAM,GAAGsB,KAAKC,MAAMvB,EAAM,IACvE,IAAIe,EAAa9B,EAAKJ,MAAMkC,WACxBC,EAAa/B,EAAKJ,MAAMmC,WACxBC,EAAsBhC,EAAKJ,MAAMoC,oBACjCC,EAAoBjC,EAAKJ,MAAMqC,kBAC/BC,GAAW,EACfK,QAAQC,IAAIxC,EAAKJ,MAAMgC,cAEvB,IAAK,IAAIa,EAAI,EAAGA,EAAI,EAAGA,IACnB,IAAIzC,EAAKJ,MAAMmC,WAAWU,GAAI,CAE1B,IADA,IAAIC,GAAW,EACNC,EAAI,EAAGA,EAAI,EAAGA,IACdP,EAAMK,GAAGE,KACVD,GAAW,GAGhBA,IACCH,QAAQC,IAAI,cACZT,EAAWU,IAAK,EAChBF,QAAQC,IAAIT,GACZG,GAAW,GAKvB,IAAKF,EAAqB,CAEtB,IADA,IAAIY,GAAgB,EACXH,EAAI,EAAGA,EAAI,EAAGA,IAEdL,EAAMK,GAAGA,KACVG,GAAgB,GAIrBA,IACCL,QAAQC,IAAI,mBACZR,GAAsB,EACtBE,GAAW,GAInB,IAAID,EAAmB,CAEnB,IADA,IAAIY,GAAc,EACTJ,EAAI,EAAGA,EAAI,EAAGA,IAEdL,EAAM,EAAEK,GAAGA,KACZI,GAAc,GAInBA,IACCN,QAAQC,IAAI,mBACZP,GAAoB,EACpBC,GAAW,GAKnB,IAAK,IAAIO,EAAI,EAAGA,EAAI,EAAGA,IACnB,IAAIzC,EAAKJ,MAAMkC,WAAWW,GAAI,CAE1B,IADA,IAAIK,GAAW,EACNH,EAAI,EAAGA,EAAI,EAAGA,IACdP,EAAMO,GAAGF,KACVK,GAAW,GAGfA,IACAP,QAAQC,IAAI,cACZV,EAAWW,IAAK,EAChBF,QAAQC,IAAIV,GACZI,GAAW,GAKvBlC,EAAKC,SAAS,CACV2B,aAAcQ,EACdN,WAAYA,EACZC,WAAYA,EACZC,oBAAqBA,EACrBC,kBAAmBA,EACnBC,SAAUA,KA7GClC,EA2InBmC,cAAgB,WAAiB,IAAhBpB,EAAgBgC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAR,IACjBG,EAAU,IAAIC,eAClBD,EAAQE,KAAK,MAAOC,EAAQ,KAAgB,GAC5CH,EAAQI,mBAAqB,WACzB,GAA2B,IAAvBJ,EAAQK,aACe,MAAnBL,EAAQM,QAAqC,IAAnBN,EAAQM,QAAc,CAWhD,IATA,IAAIC,EAAUP,EAAQQ,aAElBC,EAAQrC,EAAIsC,cAAc7C,GAE1B8C,EAAaJ,EAAQK,MAAM,MAAMC,OACjC,SAACC,EAAMC,GAAU,OAAON,EAAMO,QAAQD,IAAQ,IAG9CE,EAAS,GACL1B,EAAE,EAAGA,EAAE,EAAGA,IAAK,CACnB0B,EAAO1B,GAAK,GACZ,IAAI,IAAIE,EAAE,EAAGA,EAAE,EAAGA,IACdwB,EAAO1B,GAAGE,IAAK,EAIvB3C,EAAKC,SAAS,CACVe,KAAM6C,EACNhC,SAAU7B,EAAKJ,MAAMiC,SAAS,GAC9BD,aAAcuC,EACdrC,WAAY,GACZC,WAAY,GACZC,qBAAqB,EACrBC,mBAAmB,MAMnCiB,EAAQkB,KAAK,OA7KXpE,EAAKc,aAAed,EAAKc,aAAauD,KAAlB9C,OAAA+C,EAAA,EAAA/C,QAAA+C,EAAA,EAAA/C,CAAAvB,KACpBA,EAAKG,iBAAmBH,EAAKG,iBAAiBkE,KAAtB9C,OAAA+C,EAAA,EAAA/C,QAAA+C,EAAA,EAAA/C,CAAAvB,KAHXA,mFAkBfS,KAAK0B,gBACLoC,SAASC,MAAQ,+CA+JZ,IAAAC,EAAAhE,KACP,OACEJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAEXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,KAAGmE,KAAM,+CACLrE,EAAAC,EAAAC,cAAA,OAAKoE,IAAKC,IAAMC,MAAO,CAACC,UAAW,GAAIC,SAAU,OAAQC,IAAI,WAC7D3E,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,uBAGRF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAChBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QACdH,EAAAC,EAAAC,cAAA,QAAM0E,KAAK,MAAMC,aAAW,SAA5B,gBACA7E,EAAAC,EAAAC,cAAA,6BAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAC4E,EAAD,CAAOnE,KAAM,OAAQE,KAAM,SAAUH,MAAO,IAAKK,SAAS,EAAMN,aAAcL,KAAKK,eACnFT,EAAAC,EAAAC,cAAC4E,EAAD,CAAOnE,KAAM,UAAWE,KAAM,SAAUH,MAAO,IAAKD,aAAcL,KAAKK,eACvET,EAAAC,EAAAC,cAAC4E,EAAD,CAAOnE,KAAM,QAASE,KAAM,SAAUH,MAAO,IAAKD,aAAcL,KAAKK,iBAGzET,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAETC,KAAKb,MAAMoB,KAAKoE,IAAI,SAACpB,GAAkB,IAAZC,EAAYlB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAN,EAE7B,OADAkB,IACO5D,EAAAC,EAAAC,cAAC8E,EAAD,CAAWpB,IAAKQ,EAAK7E,MAAMiC,SAAWoC,EAAK7D,GAAI6D,EAAI,EAAGtD,QAASqD,EAAM7D,iBAAkBsE,EAAKtE,sBAK7GE,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAKb,MAAMsC,SAAW,aAAe,QAASxB,QAAS,kBAAM+D,EAAKxE,SAAS,CAACiC,UAAU,MAClG7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAM0E,KAAK,MAAMC,aAAW,SAA5B,gBACA7E,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,QAAM0E,KAAK,MAAMC,aAAW,SAA5B,gBACA7E,EAAAC,EAAAC,cAAA,gFAnGZ,IAF8B,IAAbQ,EAAagC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAL,IACrBY,EAAQ,GACHlB,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAEzB,IAAI6C,EAAIjD,KAAKC,MAAsB,IAAhBD,KAAKkD,UAExB,GAAa,MAAVxE,EACC,KAAOuE,GAAK,IACRA,EAAIjD,KAAKC,MAAsB,IAAhBD,KAAKkD,eAIvB,GAAa,MAAVxE,EACJ,KAAO,GAAKuE,GAAKA,EAAI,IACjBA,EAAIjD,KAAKC,MAAsB,IAAhBD,KAAKkD,UAI5B,KAAM5B,EAAMO,QAAQoB,IAAM,GACtBA,EAAIjD,KAAKC,MAAsB,GAAhBD,KAAKkD,UAExB5B,EAAMlB,GAAK6C,EAEf,OAAO3B,SA1IK/C,aCME4E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOzF,EAAAC,EAAAC,cAACwF,EAAD,MAASxB,SAASyB,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.2d6bede8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github.a0b866ca.svg\";","module.exports = __webpack_public_path__ + \"static/media/bingo.ca77f28e.txt\";","import React, { Component } from 'react';\nimport './BingoCell.css';\n\nclass BingoCell extends Component {\n\n    state = {\n        clicked: false\n    };\n\n    handleClick = () => {\n        let isClicked = !this.state.clicked;\n        this.setState({clicked: isClicked});\n        this.props.handleCellChange(this.props.id);\n    };\n\n    render() {\n        return (\n            <div className={this.state.clicked ? \"cell cell-selected\" : \"cell\"} onClick={this.handleClick}>\n                <p>{this.props.content}</p>\n            </div>\n        );\n    }\n}\n\nexport default BingoCell;","import React, { Component } from 'react';\nimport './Radio.css';\n\nclass Radio extends Component {\n\n    // Hvis knappen endres, send melding om dette til parent.\n    handleChange = () => {\n        this.props.handleChange(this.props.value);\n    };\n\n    render() {\n        return (\n            <label className=\"container\">{this.props.text}\n                <input type=\"radio\" name={this.props.name} value={this.props.value} defaultChecked={this.props.checked} onChange={this.handleChange}/>\n                <span className=\"checkmark\"/>\n            </label>\n\n        );\n    }\n}\n\nexport default Radio;\n","import React, { Component } from 'react';\nimport BingoCell from './components/BingoCell';\nimport Radio from './components/Radio';\nimport './App.css';\nimport logo from './github.svg';\n\nclass App extends Component {\n\n  constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleCellChange = this.handleCellChange.bind(this);\n  }\n\n  state = {\n      text: [],\n      chosen_cells: [],\n      bingo_id: 0,\n      bingo_rows: [],\n      bingo_cols: [],\n      bingo_diagonal_down: false,\n      bingo_diagonal_up: false,\n      is_bingo: false\n  };\n\n  componentDidMount() {\n      this.generateBoard();\n      document.title = \"Tinderbingo\"\n  }\n\n  handleChange = (value) => {\n      this.generateBoard(value);\n  };\n\n  handleCellChange = (value) => {\n      let cells = this.state.chosen_cells;\n      cells[value%4][Math.floor(value/4)] = !cells[value%4][Math.floor(value/4)];\n      let bingo_rows = this.state.bingo_rows;\n      let bingo_cols = this.state.bingo_cols;\n      let bingo_diagonal_down = this.state.bingo_diagonal_down;\n      let bingo_diagonal_up = this.state.bingo_diagonal_up;\n      let is_bingo = false;\n      console.log(this.state.chosen_cells);\n\n      for (let i = 0; i < 4; i++) {\n          if(!this.state.bingo_cols[i]) {\n              let colBingo = true;\n              for (let j = 0; j < 4; j++) {\n                  if (!cells[i][j]) {\n                      colBingo = false;\n                  }\n              }\n              if(colBingo) {\n                  console.log(\"col bingo!\");\n                  bingo_cols[i] = true;\n                  console.log(bingo_cols);\n                  is_bingo = true;\n              }\n          }\n      }\n\n      if (!bingo_diagonal_down) {\n          let diagBingoDown = true;\n          for (let i = 0; i < 4; i++) {\n\n              if (!cells[i][i]) {\n                  diagBingoDown = false;\n              }\n          }\n\n          if(diagBingoDown) {\n              console.log(\"diagonal bingo!\");\n              bingo_diagonal_down = true;\n              is_bingo = true;\n          }\n      }\n\n      if(!bingo_diagonal_up) {\n          let diagBingoUp = true;\n          for (let i = 0; i < 4; i++) {\n\n              if (!cells[3-i][i]) {\n                  diagBingoUp = false;\n              }\n          }\n\n          if(diagBingoUp) {\n              console.log(\"diagonal bingo!\");\n              bingo_diagonal_up = true;\n              is_bingo = true;\n          }\n      }\n\n\n      for (let i = 0; i < 4; i++) {\n          if(!this.state.bingo_rows[i]) {\n              let rowBingo = true;\n              for (let j = 0; j < 4; j++) {\n                  if (!cells[j][i]) {\n                      rowBingo = false;\n                  }\n              }\n              if (rowBingo) {\n                  console.log(\"row bingo!\");\n                  bingo_rows[i] = true;\n                  console.log(bingo_rows);\n                  is_bingo = true;\n              }\n          }\n      }\n\n      this.setState({\n          chosen_cells: cells,\n          bingo_rows: bingo_rows,\n          bingo_cols: bingo_cols,\n          bingo_diagonal_down: bingo_diagonal_down,\n          bingo_diagonal_up: bingo_diagonal_up,\n          is_bingo: is_bingo\n      });\n  };\n\n  static generatePicks(value = \"b\") {\n      let picks = [];\n      for (let i = 0; i < 16; i++) {\n\n          let k = Math.floor(Math.random() * 103);\n\n          if(value === \"m\") {\n              while (k >= 87) {\n                  k = Math.floor(Math.random() * 103);\n              }\n          }\n\n          else if(value === \"f\") {\n              while (68 < k && k < 87) {\n                  k = Math.floor(Math.random() * 103);\n              }\n          }\n\n          while(picks.indexOf(k) > -1) {\n              k = Math.floor(Math.random() * 69);\n          }\n          picks[i] = k;\n      }\n      return picks;\n  }\n\n  generateBoard = (value = \"b\") => {\n      let rawFile = new XMLHttpRequest();\n      rawFile.open(\"GET\", require(\"./bingo.txt\"), false);\n      rawFile.onreadystatechange = () => {\n          if (rawFile.readyState === 4) {\n              if (rawFile.status === 200 || rawFile.status === 0) {\n\n                  let allText = rawFile.responseText;\n\n                  let picks = App.generatePicks(value);\n\n                  let pickedText = allText.split(\"\\n\").filter(\n                      (item, key) => { return picks.indexOf(key) > -1 }\n                  );\n\n                  let matrix = [];\n                  for(let i=0; i<4; i++) {\n                      matrix[i] = [];\n                      for(let j=0; j<4; j++) {\n                          matrix[i][j] = false;\n                      }\n                  }\n\n                  this.setState({\n                      text: pickedText,\n                      bingo_id: this.state.bingo_id+16,\n                      chosen_cells: matrix,\n                      bingo_rows: [],\n                      bingo_cols: [],\n                      bingo_diagonal_down: false,\n                      bingo_diagonal_up: false,\n                  });\n\n              }\n          }\n      };\n      rawFile.send(null);\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n\n          <div className=\"github\">\n              <a href={\"https://github.com/Magssch/Tinder-bingo-web\"}>\n                  <img src={logo} style={{maxHeight: 50, maxWidth: \"6vw\"}} alt=\"Github\" />\n                  <br/>\n                  <div>Regler</div>\n              </a>\n          </div>\n          <header className=\"App-header\">\n            <span className=\"logo\">\n              <span role=\"img\" aria-label=\"flame\">🔥</span>\n              <span> Tinderbingo</span>\n            </span>\n            <div className=\"categories\">\n              <Radio text={\"Menn\"} name={\"gender\"} value={\"m\"} checked={true} handleChange={this.handleChange}/>\n              <Radio text={\"Kvinner\"} name={\"gender\"} value={\"f\"} handleChange={this.handleChange}/>\n              <Radio text={\"Begge\"} name={\"gender\"} value={\"b\"} handleChange={this.handleChange}/>\n            </div>\n          </header>\n          <div className=\"bingoBoard\">\n              {\n                this.state.text.map((item, key = 0) => {\n                    key++;\n                    return <BingoCell key={this.state.bingo_id + key} id={key-1} content={item} handleCellChange={this.handleCellChange}/>;\n                })\n              }\n          </div>\n\n          <div className={this.state.is_bingo ? \"popup show\" : \"popup\"} onClick={() => this.setState({is_bingo: false})}>\n              <div className=\"bingotext\">\n                  <span role=\"img\" aria-label=\"flame\">🔥</span>\n                  <span>Bingo!</span>\n                  <span role=\"img\" aria-label=\"flame\">🔥</span>\n                  <p>(Trykk for å lukke)</p>\n              </div>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
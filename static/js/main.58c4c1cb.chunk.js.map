{"version":3,"sources":["components/BingoCell/index.js","components/Radio/index.js","github.svg","assets/background.png","App.js","serviceWorker.js","assets/chalet-new-york-nineteen-seventy.ttf","index.js"],"names":["BingoCell","id","content","clicked","handleCellChange","className","onClick","Radio","name","text","value","checked","handleChange","type","onChange","App","props","state","chosen_cells","bingo_id","bingo_rows","bingo_cols","bingo_diagonal_down","bingo_diagonal_up","is_bingo","showRules","confirmReset","bingo_type","cells","Math","floor","is_full_bingo","every","level2","i","bool","colBingo","j","diagBingoDown","diagBingoUp","rowBingo","newState","setState","localStorage","setItem","JSON","stringify","generateBoard","pickedText","generatePicks","bingopile","matrix","initState","bind","getItem","this","parse","femaleOptions","optionsFemale","concat","optionsUnisex","maleOptions","optionsMale","unisexOptions","picks","k","random","length","indexOf","valueOf","src","fireImgOpaque","alt","compareRadioValue","style","width","padding","href","logo","map","item","key","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.58c4c1cb.chunk.js","sourcesContent":["import React from \"react\";\n\nconst BingoCell = ({ id, content, clicked, handleCellChange }) => {\n  return (\n    <div\n      className={clicked ? \"cell cell-selected\" : \"cell\"}\n      onClick={() => handleCellChange(id)}\n    >\n      <div className={\"cell-full \" + (clicked ? \"cell-full-selected\" : \"\")}>\n        <p>{content}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default BingoCell;\n","import React from \"react\";\n\nconst Radio = ({ name, text, value, checked, handleChange }) => {\n  return (\n    <label className=\"container\">\n      {text}\n      <input\n        type=\"radio\"\n        name={name}\n        value={value}\n        checked={checked}\n        onChange={handleChange}\n      />\n      <span className=\"checkmark\" />\n    </label>\n  );\n};\n\nexport default Radio;\n","export default __webpack_public_path__ + \"static/media/github.1dd51261.svg\";","export default __webpack_public_path__ + \"static/media/background.15cc905f.png\";","import React, { Component } from \"react\";\nimport BingoCell from \"./components/BingoCell\";\nimport Radio from \"./components/Radio\";\nimport logo from \"./github.svg\";\nimport fireImgOpaque from \"./assets/background.png\";\nimport bingopile from \"./bingo.json\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.handleCellChange = this.handleCellChange.bind(this);\n  }\n\n  state = {\n    text: [],\n    chosen_cells: [],\n    bingo_id: 0,\n    bingo_rows: [],\n    bingo_cols: [],\n    bingo_diagonal_down: false,\n    bingo_diagonal_up: false,\n    is_bingo: false,\n    showRules: false,\n    confirmReset: false,\n    bingo_type: \"b\",\n  };\n\n  componentDidMount() {\n    if (!!localStorage.getItem(\"bingoState\")) {\n      this.setState(JSON.parse(localStorage.getItem(\"bingoState\")));\n    } else {\n      this.generateBoard(\"m\");\n    }\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem(\"bingoState\", JSON.stringify(this.state));\n  }\n\n  handleCellChange = (value) => {\n    let cells = this.state.chosen_cells;\n    cells[value % 4][Math.floor(value / 4)] =\n      !cells[value % 4][Math.floor(value / 4)];\n    let bingo_rows = this.state.bingo_rows;\n    let bingo_cols = this.state.bingo_cols;\n    let bingo_diagonal_down = this.state.bingo_diagonal_down;\n    let bingo_diagonal_up = this.state.bingo_diagonal_up;\n    let is_bingo = false;\n    let is_full_bingo = cells.every(function (level2, i) {\n      return level2.every(function (bool) {\n        return bool;\n      });\n    });\n\n    for (let i = 0; i < 4; i++) {\n      if (!this.state.bingo_cols[i]) {\n        let colBingo = true;\n        for (let j = 0; j < 4; j++) {\n          if (!cells[i][j]) {\n            colBingo = false;\n          }\n        }\n        if (colBingo) {\n          bingo_cols[i] = true;\n          is_bingo = true;\n        }\n      }\n    }\n    if (!bingo_diagonal_down) {\n      let diagBingoDown = true;\n      for (let i = 0; i < 4; i++) {\n        if (!cells[i][i]) {\n          diagBingoDown = false;\n        }\n      }\n      if (diagBingoDown) {\n        bingo_diagonal_down = true;\n        is_bingo = true;\n      }\n    }\n    if (!bingo_diagonal_up) {\n      let diagBingoUp = true;\n      for (let i = 0; i < 4; i++) {\n        if (!cells[3 - i][i]) {\n          diagBingoUp = false;\n        }\n      }\n      if (diagBingoUp) {\n        bingo_diagonal_up = true;\n        is_bingo = true;\n      }\n    }\n    for (let i = 0; i < 4; i++) {\n      if (!this.state.bingo_rows[i]) {\n        let rowBingo = true;\n        for (let j = 0; j < 4; j++) {\n          if (!cells[j][i]) {\n            rowBingo = false;\n          }\n        }\n        if (rowBingo) {\n          bingo_rows[i] = true;\n          is_bingo = true;\n        }\n      }\n    }\n    is_bingo = is_full_bingo ? false : is_bingo;\n    const newState = {\n      text: this.state.text,\n      chosen_cells: cells,\n      bingo_rows: bingo_rows,\n      bingo_cols: bingo_cols,\n      bingo_diagonal_down: bingo_diagonal_down,\n      bingo_diagonal_up: bingo_diagonal_up,\n      is_bingo: is_bingo,\n      is_full_bingo: is_full_bingo,\n      bingo_id: this.state.bingo_id,\n      bingo_type: this.state.bingo_type,\n    };\n    this.setState(newState);\n    localStorage.setItem(\"bingoState\", JSON.stringify(newState));\n  };\n\n  generatePicks(bingopile) {\n    const femaleOptions = bingopile.optionsFemale.concat(\n      bingopile.optionsUnisex\n    );\n    const maleOptions = bingopile.optionsMale.concat(bingopile.optionsUnisex);\n    const unisexOptions = bingopile.optionsUnisex.concat(\n      bingopile.optionsMale.concat(bingopile.optionsFemale)\n    );\n    let picks = [];\n    for (let i = 0; i < 16; i++) {\n      if (this.state.bingo_type === \"m\") {\n        let k = Math.floor(Math.random() * maleOptions.length);\n        while (picks.indexOf(maleOptions[k]) > -1) {\n          k = Math.floor(Math.random() * maleOptions.length);\n        }\n        picks[i] = maleOptions[k];\n      } else if (this.state.bingo_type === \"f\") {\n        let k = Math.floor(Math.random() * femaleOptions.length);\n        while (picks.indexOf(femaleOptions[k]) > -1) {\n          k = Math.floor(Math.random() * femaleOptions.length);\n        }\n        picks[i] = femaleOptions[k];\n      } else {\n        let k = Math.floor(Math.random() * unisexOptions.length);\n        while (picks.indexOf(unisexOptions[k]) > -1) {\n          k = Math.floor(Math.random() * unisexOptions.length);\n        }\n        picks[i] = unisexOptions[k];\n      }\n    }\n    return picks;\n  }\n\n  generateBoard = () => {\n    let pickedText = this.generatePicks(bingopile);\n    let matrix = [];\n    for (let i = 0; i < 4; i++) {\n      matrix[i] = [];\n      for (let j = 0; j < 4; j++) {\n        matrix[i][j] = false;\n      }\n    }\n    const initState = {\n      text: pickedText,\n      bingo_id: this.state.bingo_id + 16,\n      chosen_cells: matrix,\n      bingo_rows: [],\n      bingo_cols: [],\n      bingo_diagonal_down: false,\n      bingo_diagonal_up: false,\n      is_bingo: false,\n      is_full_bingo: false,\n      bingo_type: this.state.bingo_type,\n    };\n    localStorage.setItem(\"bingoState\", JSON.stringify(initState));\n    this.setState(initState);\n  };\n\n  compareRadioValue(value) {\n    return this.state.bingo_type.valueOf() === value.valueOf();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div\n          className={this.state.is_full_bingo ? \"popup show\" : \"popup\"}\n          onClick={() => this.setState({ is_full_bingo: false })}\n        >\n          <div className=\"bingotextUpper\">\n            <img src={fireImgOpaque} alt=\"Flamme\" />\n            <img src={fireImgOpaque} alt=\"Flamme\" />\n            <img src={fireImgOpaque} alt=\"Flamme\" />\n          </div>\n          <div className=\"bingotext\">\n            <span>Gratulerer, du har vunnet kvelden!</span>\n          </div>\n          <p>(Trykk for å lukke)</p>\n        </div>\n        <div\n          className={this.state.is_bingo ? \"popup show\" : \"popup\"}\n          onClick={() => this.setState({ is_bingo: false })}\n        >\n          <div className=\"bingotext\">\n            <img src={fireImgOpaque} alt=\"Flamme\" />\n            <span>Bingo!</span>\n            <img src={fireImgOpaque} alt=\"Flamme\" />\n          </div>\n          <p>(Trykk for å lukke)</p>\n        </div>\n        <div\n          className={this.state.showRules ? \"popup show\" : \"popup\"}\n          onClick={() => this.setState({ showRules: false })}\n        >\n          <div className=\"textWindow\">\n            <p>\n              <b>Regler / hvordan spille</b>\n            </p>\n            <br />\n            <p>\n              1) En person viser Tinderen sin på storskjerm (Chromecast,\n              Airplay) og begynner å sveipe gjennom profilene.\n            </p>\n            <br />\n            <p>\n              2) Alle krysser av på sitt eget brett og drikker en slurk når det\n              kommer profiler som passer rutene sine.\n            </p>\n            <br />\n            <p>\n              3) Får du fire kryss på rad kan du dele ut fire slurker.\n              (vertikalt, horisontalt og diagonalt)\n            </p>\n            <br />\n            <p>\n              4) Vinneren er den som får fyllt hele bingokortet (eller h*n som\n              har flest når man går tom for swipes)\n            </p>\n\n            <br />\n            <p>\n              <b>Alle skåler og drikker når</b>\n            </p>\n            <br />\n            <p>1) Du får reklame.</p>\n            <br />\n            <p>2) It’s a match!</p>\n            <br />\n            <p>3) Personen som sveiper gir super-like ved uhell</p>\n            <br />\n            <p>4) Noen kjenner personen på storskjerm.</p>\n          </div>\n          <p>(Trykk for å lukke)</p>\n        </div>\n        <div className={this.state.confirmReset ? \"popup show\" : \"popup\"}>\n          <div className=\"textWindow\">\n            <p>Hvilke(t) kjønner sveiper dere på?</p>\n            <div className=\"categories\">\n              <Radio\n                text={\"Menn\"}\n                name={\"gender\"}\n                value={\"m\"}\n                checked={this.compareRadioValue(\"m\")}\n                handleChange={() => this.setState({ bingo_type: \"m\" })}\n              />\n              <Radio\n                text={\"Kvinner\"}\n                name={\"gender\"}\n                value={\"f\"}\n                checked={this.compareRadioValue(\"f\")}\n                handleChange={() => this.setState({ bingo_type: \"f\" })}\n              />\n              <Radio\n                text={\"Unisex\"}\n                name={\"gender\"}\n                value={\"b\"}\n                checked={this.compareRadioValue(\"b\")}\n                handleChange={() => this.setState({ bingo_type: \"b\" })}\n              />\n            </div>\n            <br />\n            <button\n              onClick={() => {\n                this.generateBoard();\n                this.setState({ confirmReset: false });\n              }}\n            >\n              Nytt brett\n            </button>\n          </div>\n\n          <p\n            onClick={() => this.setState({ confirmReset: false })}\n            style={{ width: \"100%\", padding: \"8rem 0\" }}\n          >\n            (Eller trykk for å lukke)\n          </p>\n        </div>\n\n        <div className=\"App-header\">\n          <span className=\"logo\">\n            <img src={fireImgOpaque} alt=\"Abakus logo\" />\n            <span> Tinderbingo</span>\n          </span>\n          <div className=\"newBoard\">\n            <button onClick={() => this.setState({ confirmReset: true })}>\n              Bytt kjønn / nytt brett\n            </button>\n          </div>\n          <div className=\"rules\">\n            <button onClick={() => this.setState({ showRules: true })}>\n              Regler\n            </button>\n          </div>\n          <div className=\"github\">\n            <a href={\"https://github.com/magssch/tinder-bingo-web\"}>\n              <img src={logo} alt=\"Github\" />\n            </a>\n          </div>\n        </div>\n        <div className=\"bingoBoard\">\n          {this.state.text.map((item, key = 0) => {\n            key++;\n            return (\n              <BingoCell\n                key={this.state.bingo_id + key}\n                id={key - 1}\n                content={item}\n                clicked={\n                  this.state.chosen_cells[(key - 1) % 4][\n                    Math.floor((key - 1) / 4)\n                  ]\n                }\n                handleCellChange={this.handleCellChange}\n              />\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export default __webpack_public_path__ + \"static/media/chalet-new-york-nineteen-seventy.573d2449.ttf\";","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./assets/chalet-new-york-nineteen-seventy.ttf\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}